apply plugin: 'com.android.application'
//apply plugin: 'com.guardsquare.proguard'

android {
    compileSdk 34
    namespace "com.ft"

    defaultConfig {
        applicationId "com.ft"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName "1.4"
        testInstrumentationRunner "com.ft.application.MockTestRunner"
    }

    signingConfigs {
        release {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            //gradlew createDebugCoverageReport Test case coverage report
            testCoverageEnabled = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }

    flavorDimensions = ['tier']

    productFlavors {

        prodTest {
            buildConfigField "String", "CUSTOM_VALUE", "\"Custom value\""
            buildConfigField "String", "DATAKIT_URL", "\"${ft_env.datakitRUMUrl}\""
            buildConfigField "String", "DATAWAY_URL", "\"${ft_env.datawayRUMUrl}\""
            buildConfigField "String", "CLIENT_TOKEN", "\"${ft_env.clientToken}\""
            buildConfigField "String", "RUM_APP_ID", "\"${ft_env.rumAppid}\""
            buildConfigField "String", "TRACK_ID", "\"${ft_env.trackId}\""
            buildConfigField "String", "TRACE_URL", "\"${ft_env.traceUrl}\""
            buildConfigField "String", "ENV", "\"${ft_env.prodTestEnv}\""
            buildConfigField "String", "PROXY_ADDRESS", "\"${ft_env.proxyAddress}\""
            buildConfigField "Boolean", "LAZY_INIT", "false"
            dimension "tier"
        }

        prodPublish {
            buildConfigField "String", "CUSTOM_VALUE", "\"Custom value\""
            buildConfigField "String", "DATAKIT_URL", "\"${ft_env.datakitRUMUrl}\""
            buildConfigField "String", "DATAWAY_URL", "\"${ft_env.datawayRUMUrl}\""
            buildConfigField "String", "CLIENT_TOKEN", "\"${ft_env.clientToken}\""
            buildConfigField "String", "RUM_APP_ID", "\"${ft_env.rumAppid}\""
            buildConfigField "String", "TRACK_ID", "\"${ft_env.trackId}\""
            buildConfigField "String", "TRACE_URL", "\"${ft_env.traceUrl}\""
            buildConfigField "String", "ENV", "\"${ft_env.prodPublishEnv}\""
            buildConfigField "String", "PROXY_ADDRESS", "\"${ft_env.proxyAddress}\""
            buildConfigField "Boolean", "LAZY_INIT", "false"
            dimension "tier"

        }

    }
}

//proguard {
//    configurations {
//        release {
//            defaultConfiguration 'proguard-android-optimize.txt'
//            configuration 'proguard-rules.pro'
//        }
//    }
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.fragment:fragment:1.6.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.20"
    implementation "androidx.webkit:webkit:1.9.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation project(':ft-test')
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:rules:1.4.0'

//    implementation 'com.cloudcare.ft.mobile.sdk.tracker.agent:ft-sdk:1.3.16-alpha04'
    implementation project(":ft-sdk")
//    implementation project(":WebviewTest")
    implementation project(":ft-native")
    implementation project(":ft-session-replay")
    implementation project(":ft-session-replay-material")

    implementation 'com.squareup.okhttp3:okhttp:4.5.0'

//    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
//    debugImplementation 'com.amitshekhar.android:debug-db-encrypt:1.0.6'
}


apply plugin: 'ft-plugin'

FTExt {
    showLog = true

    autoUploadMap = false
    autoUploadNativeDebugSymbol = false
    datakitUrl = ft_env.datakitRUMUrl
    datawayToken = ft_env.datawayToken
    appId = ft_env.rumAppid
    env = 'common'
    //   generateSourceMapOnly = true
//    ignorePackages=['com.ft.http']

    prodFlavors {
        prodTest {
            autoUploadMap = true
            autoUploadNativeDebugSymbol = true
            datakitUrl = ft_env.datakitRUMUrl
            datawayToken = ft_env.datawayToken
            appId = ft_env.rumAppid
            env = ft_env.prodTestEnv
        }
        prodPublish {
            autoUploadMap = true
            autoUploadNativeDebugSymbol = true
            datakitUrl = ft_env.datakitRUMUrl
            datawayToken = ft_env.datawayToken
            appId = ft_env.rumAppid
            env = ft_env.prodPublishEnv
        }
    }
}
repositories {
    mavenCentral()
}
